STATUS.TXT

(c) 2001-2023 Guglielmo Nigri <guglielmonigri at yahoo.it>.
Gleam comes with ABSOLUTELY NO WARRANTY.  This is free software, and you are
welcome to redistribute it under certain conditions; see LICENSE.TXT.

This file contains the current implementation status for R5RS features.


DONE:
-----

quote
lambda
if
set!
begin
and
define
eq?
eqv?
equal?
list
cons
car
cdr
set-car!
set-cdr!
append

quasiquote
unquote
unquote-splicing

cond
else
let
let*
apply
map

memq
memv
member
assq
assv
assoc

call-with-current-continuation

eval
scheme-report-environment
null-environment
interaction-environment             ;; optional procedure

+
-                                   ;; optional procedure (varargs)
*
/                                   ;; optional procedure (varargs)
<
<=
>
>=
=
number?
symbol?
procedure?
boolean?
pair?
string?
null?
char?
port?
not
eof-object?
display
write
newline
read
current-input-port
current-output-port
input-port?
output-port?
load                                ;; optional procedure

caar
cadr
...
cdddar
cddddr

--------------------------------------------------------------------------------

TODO:
-----

case
letrec
do
delay

let-syntax
letrec-syntax
define-syntax
vector?

complex?
real?
rational?
integer?
exact?
inexact?
inexact->exact
exact->inexact
zero?
positive?
negative?
odd?
even?
max
min
abs
quotient
remainder
modulo
gcd
lcm
numerator
denominator
floor
ceiling
truncate
round
rationalize
exp
log
sin
cos
tan
asin
acos
atan
expt
sqrt
make-rectangular
make-polar
real-part
imag-part
magnitude
angle

number->string
string->number

list?
length
reverse
list-tail
list-ref

symbol->string
string->symbol

char=?
char<?
char>?
char<=?
char>=?
char-ci=?
char-ci<?
char-ci>?
char-ci<=?
char-ci>=?
char-alphabetic?
char-numeric?
char-whitespace?
char-upper-case?
char-lower-case?
char->integer
integer->char
char-upcase
char-downcase

make-string
string
string-length
string-ref
string-set!
string=?
string-ci=?
string<?
string>?
string<=?
string>=?
string-ci<?
string-ci>?
string-ci<=?
string-ci>=?
substring
string-append
string->list
list->string
string-copy
string-fill!

make-vector
vector
vector-length
vector-ref
vector-set!
vector->list
list->vector
vector-fill!

for-each
force
values
call-with-values
dynamic-wind

call-with-input-file
call-with-output-file
with-input-from-file                ;; optional procedure
with-output-to-file                 ;; optional procedure
open-input-file
open-output-file
close-input-port
close-output-port

read-char
peek-char
char-ready?
write-char
transcript-on                       ;; optional procedure
transcript-off                      ;; optional procedure